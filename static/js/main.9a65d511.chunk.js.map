{"version":3,"sources":["components/AffixMenu.js","components/Hero.js","components/Tabs.js","components/Graph.js","components/TimeLine.js","assets/images/alex2.png","components/Card.js","components/Footer.js","views/Home.js","views/Blog.js","components/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","AffixMenu","useState","top","current","setCurrent","experienceSection","useScrollSection","skillsSection","coursesSection","collabsSection","offsetTop","onClick","e","key","selectedKeys","mode","Item","icon","IdcardOutlined","selected","RadarChartOutlined","ProfileOutlined","PlusSquareOutlined","Title","Typography","Text","SquareAnimation","className","map","item","index","Hero","setVisible","style","cursor","fontWeight","textDecoration","type","textAlign","fontSize","borderRadius","marginTop","Paragraph","Panel","Collapse","Tabs","data","ellipsis","defaultActiveKey","onChange","console","log","bordered","expandIcon","isActive","CaretRightOutlined","rotate","url","header","companyName","extra","LinkOutlined","window","open","level","roll","dateRange","dailyFunctions","skills","title","bullets","color","projects","rows","expandable","symbol","name","parse","resume","Graph","marginLeft","SmileFilled","MehFilled","options","series","height","TimeLine","padding","label","show","date","OwnCard","darkMode","setDarkMode","justifyContent","size","src","avatar2","marginBottom","MailOutlined","href","socialNetworks","email","rel","LinkedinOutlined","target","checked","Footer","OwnFooter","HeartTwoTone","Content","Home","visible","placement","closable","onClose","justify","xs","Card","personalData","id","sm","experience","backgroundColor","courses","itemLayout","dataSource","collaboration","renderItem","width","alt","Meta","avatar","description","Blog","onSelect","info","background","overflow","blog","tree","showLine","switcherIcon","DownOutlined","defaultExpandedKeys","treeData","content","text","indexContent","paragraph","Routes","component","exact","path","to","browserHistory","createBrowserHistory","App","history","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a65d511.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Layout, Affix, Menu } from 'antd';\r\nimport { ProfileOutlined, RadarChartOutlined, IdcardOutlined, PlusSquareOutlined } from '@ant-design/icons';\r\nimport {\r\n    useScrollSection,\r\n} from 'react-scroll-section';\r\n\r\nconst { Header } = Layout;\r\n\r\nconst AffixMenu = () => {\r\n    const [top] = useState(0);\r\n    const [current, setCurrent] = useState('')\r\n\r\n    const experienceSection = useScrollSection('experience');\r\n    const skillsSection = useScrollSection('skills');\r\n    const coursesSection = useScrollSection('courses');\r\n    const collabsSection = useScrollSection('collabs');\r\n    return (\r\n        <Affix offsetTop={top}>\r\n            <Header>\r\n                <Menu onClick={(e) => setCurrent(e.key)} selectedKeys={current} mode=\"horizontal\">\r\n                    <Menu.Item key=\"experience-menu\" icon={<IdcardOutlined />} onClick={experienceSection.onClick} selected={experienceSection.selected}>\r\n                        Experiencia\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"skills-menu\" icon={<RadarChartOutlined />} onClick={skillsSection.onClick} selected={skillsSection.selected}>\r\n                        Skills\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"courses-menu\" icon={<ProfileOutlined />} onClick={coursesSection.onClick} selected={coursesSection.selected}>\r\n                        Cursos\r\n                     </Menu.Item>\r\n                    <Menu.Item key=\"collabs-menu\" icon={<PlusSquareOutlined />} onClick={collabsSection.onClick} selected={collabsSection.selected}>\r\n                        Collabs\r\n                     </Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n        </Affix>\r\n    );\r\n};\r\n\r\nexport default AffixMenu","import React from 'react';\r\nimport { Typography } from 'antd'\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst SquareAnimation = () => {\r\n    const squares = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n    return (<ul className=\"bg-bubbles\">\r\n        {squares.map((item, index) => {\r\n            return (<li key={index}></li>)\r\n        })}\r\n    </ul>\r\n    )\r\n}\r\n\r\nconst Hero = ({ setVisible }) => {\r\n    return (\r\n        <section className=\"hero\" style={{ cursor: 'pointer' }} onClick={() => setVisible(true)}>\r\n            <div className=\"overlay\">\r\n                <SquareAnimation />\r\n                <div className=\"content\">\r\n                    <Title>{'{Hola Mundo}'}</Title>\r\n                    <Text>Soy<span style={{ fontWeight: 'bold', textDecoration: 'underline' }}>Alex Hernández</span>. Programador JavaScript por profesión y por pasión!</Text>\r\n                    <Text type=\"secondary\" style={{\r\n                        textAlign: 'right', fontSize: 14, borderRadius: 2, marginTop: 40\r\n                    }}>Pulsa para ver detalles de contacto</Text>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default Hero","import React, { useState } from 'react';\r\nimport parse from 'html-react-parser'\r\nimport { Collapse, Typography, Tag } from 'antd';\r\nimport { LinkOutlined, CaretRightOutlined } from '@ant-design/icons'\r\nconst { Title, Text, Paragraph } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Tabs = ({ data }) => {\r\n    const [ellipsis] = useState(false);\r\n    const genExtra = (url) => (\r\n        <LinkOutlined\r\n            onClick={() => {\r\n                window.open(url, '_blank');\r\n            }}\r\n        />\r\n    );\r\n    const callback = () => {\r\n        console.log(\"click\")\r\n    }\r\n    return (\r\n        <Collapse defaultActiveKey={['0']} onChange={callback}\r\n            bordered={false}\r\n            expandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n        >\r\n            {data && data.map((item, index) => {\r\n                return (\r\n                    <Panel header={`${item.companyName}`} key={index} extra={genExtra(item.url)}>\r\n                        <Title level={5}>{item.roll} | {item.dateRange} </Title>\r\n                        <Paragraph>{item.dailyFunctions}</Paragraph>\r\n                        <Paragraph>{item.skills?.title}</Paragraph>\r\n                        <Paragraph>{item.skills?.bullets.map((item, index) => <Tag color=\"processing\" key={index}>{item}</Tag>)}</Paragraph>\r\n                        {item?.projects && <Text>Proyectos: </Text>}\r\n                        <ul>\r\n                            {/*TODO: IMPROVE DOUBLE .MAP */}\r\n                            {item?.projects?.map((item, index) => {\r\n                                return (\r\n                                    <li key={index}>\r\n                                        <Paragraph ellipsis={!ellipsis ? { rows: 3, expandable: true, symbol: 'mostrar más' } : false}>\r\n                                            {item.name}:  {parse(item.resume)}\r\n                                        </Paragraph>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </Panel>\r\n                )\r\n            })}\r\n        </Collapse >\r\n    )\r\n}\r\n\r\nexport default Tabs","import React from 'react';\r\nimport { Typography } from 'antd'\r\nimport { SmileFilled, MehFilled } from '@ant-design/icons'\r\nimport ReactApexChart from 'react-apexcharts'\r\nconst { Paragraph } = Typography;\r\n\r\nconst Graph = ({ data }) => {\r\n    return (\r\n        <>\r\n            <Paragraph style={{ marginLeft: 10 }}><SmileFilled style={{ fontSize: 16, color: 'rgba(53,173,216,0.85)' }} /> 100: Uso diario. | <MehFilled style={{ fontSize: 16, color: 'rgba(155,214,236,0.85)' }} /> 10: Poco uso mensual.</Paragraph>\r\n            <ReactApexChart options={data?.options} series={data?.series} type=\"treemap\" height={380} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Graph","import React from 'react'\r\nimport { Timeline } from 'antd';\r\n\r\nconst TimeLine = ({ data }) => {\r\n    return (\r\n        <Timeline mode='left' style={{ padding: '20px 40px 0px 0px' }}>\r\n            {data.map((item, index) => {\r\n                return <Timeline.Item key={index} label={item.show ? item.date : ''}>{item.title}</Timeline.Item>\r\n            })}\r\n        </Timeline>\r\n    )\r\n}\r\n\r\n\r\nexport default TimeLine","export default __webpack_public_path__ + \"static/media/alex2.d53381b2.png\";","import React from 'react'\r\nimport { Card, Typography, Avatar, Switch } from 'antd';\r\nimport { LinkedinOutlined, MailOutlined } from '@ant-design/icons';\r\n//import avatar from '../assets/images/alex.png'\r\nimport avatar2 from '../assets/images/alex2.png'\r\n\r\nconst { Text } = Typography;\r\n\r\nconst OwnCard = ({ data, darkMode, setDarkMode }) => {\r\n    return (\r\n        <Card bordered={false} style={{ justifyContent: 'center', textAlign: 'center' }}>\r\n            <Avatar\r\n                size={120}\r\n                src={avatar2}\r\n                style={{ marginBottom: 10 }}\r\n            />\r\n            <br />\r\n            <Text>{data.name}</Text><br />\r\n            <Text type=\"secondary\">{data.roll}</Text><br />\r\n            <Text><MailOutlined /> <a title=\"linkedin\" href={'mailto:' + data.socialNetworks.email} rel=\"noreferrer\">{data.email}</a></Text><br />\r\n            <Text><LinkedinOutlined /> <a title=\"linkedin\" href={data.socialNetworks.url} target=\"_blank\" rel=\"noreferrer\">{data.socialNetworks.name}</a></Text><br /><br />\r\n            <Text><Switch checked={darkMode} onChange={() => setDarkMode(!darkMode)} /> Dark mode</Text>\r\n        </Card >\r\n    )\r\n}\r\nexport default OwnCard","import React from 'react';\r\nimport { Layout, BackTop } from 'antd'\r\nimport { HeartTwoTone } from '@ant-design/icons';\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst OwnFooter = () => {\r\n    return (\r\n        <>\r\n            <BackTop />\r\n            <Footer>Made with <HeartTwoTone /> by Alex</Footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OwnFooter","import React, { useState } from 'react';\r\nimport { Layout, Row, Col, Divider, Typography, List, Avatar, Drawer, Tag } from 'antd';\r\nimport parse from 'html-react-parser'\r\nimport { data } from '../helpers/data.json'\r\nimport {\r\n    ScrollingProvider,\r\n    Section,\r\n} from 'react-scroll-section';\r\nimport AffixMenu from '../components/AffixMenu';\r\nimport Hero from '../components/Hero';\r\nimport Tabs from '../components/Tabs';\r\nimport Graph from '../components/Graph';\r\nimport TimeLine from '../components/TimeLine';\r\nimport Card from '../components/Card';\r\nimport Footer from '../components/Footer';\r\n\r\nconst { Content } = Layout;\r\nconst { Text, Paragraph } = Typography;\r\n\r\nconst Home = () => {\r\n    const [darkMode, setDarkMode] = useState(false)\r\n    const [visible, setVisible] = useState(false)\r\n    const [placement] = useState('left')\r\n\r\n    const onClose = () => {\r\n        setVisible(false)\r\n    };\r\n\r\n    return (\r\n        <Layout className={`layout ${darkMode ? 'dark-mode' : ''}`}>\r\n            <ScrollingProvider>\r\n                {/* UserCard */}\r\n                <Drawer\r\n                    className={`${darkMode ? 'dark-mode' : ''}`}\r\n                    placement={placement}\r\n                    closable={false}\r\n                    onClose={onClose}\r\n                    visible={visible}\r\n                    key={placement}\r\n                >\r\n                    <Row justify=\"space-around\">\r\n                        <Col xs={24}>\r\n                            <Card data={data?.personalData} darkMode={darkMode} setDarkMode={setDarkMode} />\r\n                        </Col>\r\n                    </Row>\r\n                </Drawer>\r\n                {/* Header */}\r\n                <AffixMenu />\r\n                {/* Hero */}\r\n                <Hero setVisible={setVisible} />\r\n                {/* Experience */}\r\n                <Section id=\"experience\">\r\n                    <Divider><Text>Experiencia en empresas</Text></Divider>\r\n                    <Content>\r\n                        <Row justify=\"space-around\">\r\n                            <Col xs={24} sm={18}>\r\n                                <Tabs data={data.experience} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Content>\r\n                </Section>\r\n                {/* Skill Graph */}\r\n                <Section id=\"skills\">\r\n                    <Divider><Text>Tecnologías usadas mensualmente</Text></Divider>\r\n                    <Content>\r\n                        <Row justify=\"space-around\">\r\n                            <Col xs={24} sm={18}>\r\n                                <Graph data={data?.skills} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Content>\r\n                </Section>\r\n                {/* Courses */}\r\n                <Section id=\"courses\">\r\n                    <Divider><Text>Cursos realizados</Text></Divider>\r\n                    <Content>\r\n                        <Row justify=\"space-around\">\r\n                            <Col xs={24} sm={18}>\r\n                                <List\r\n                                    style={{ backgroundColor: '#fff' }}\r\n                                    bordered>\r\n                                    <TimeLine data={data?.courses} />\r\n                                </List>\r\n                            </Col>\r\n                        </Row>\r\n                    </Content>\r\n                </Section>\r\n\r\n                <Section id=\"collabs\">\r\n                    <Divider><Text>Colaboraciones</Text></Divider>\r\n                    <Content>\r\n                        <Row justify=\"space-around\">\r\n                            <Col xs={24} sm={18}>\r\n                                <List\r\n                                    style={{ backgroundColor: '#fff' }}\r\n                                    bordered\r\n                                    itemLayout=\"vertical\"\r\n                                    size=\"large\"\r\n                                    dataSource={data?.collaboration}\r\n                                    renderItem={item => (\r\n                                        <List.Item\r\n                                            key={item.name}\r\n                                            extra={\r\n                                                <img\r\n                                                    width={272}\r\n                                                    alt=\"logo\"\r\n                                                    src=\"https://remittven.co.uk/images/logo3.png\"\r\n                                                />\r\n                                            }\r\n                                        >\r\n                                            <List.Item.Meta\r\n                                                avatar={<Avatar src={item.avatar} />}\r\n                                                title={<a href={item.href}>{item.title}</a>}\r\n                                                description={parse(item.description)}\r\n                                            />\r\n                                            <Paragraph>Objetivos: </Paragraph>\r\n                                            <ul>\r\n                                                {item.resume.map((resume, index) => {\r\n                                                    return <li key={index}>{parse(resume)}</li>\r\n                                                })}\r\n                                            </ul>\r\n                                            <br />\r\n                                            <Paragraph>Tecnologías utilizadas: </Paragraph>\r\n                                            <Paragraph>{item.skills?.map((item, index) => <Tag color=\"processing\" key={index}>{item}</Tag>)}</Paragraph>\r\n                                        </List.Item>\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Content>\r\n                </Section>\r\n                <Divider></Divider>\r\n                {/* Footer */}\r\n                <Footer />\r\n            </ScrollingProvider>\r\n        </Layout >\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState } from 'react';\r\nimport { Layout, Row, Col, Divider, Typography, List, Avatar, Tree } from 'antd';\r\nimport parse from 'html-react-parser'\r\nimport { data } from '../helpers/data.json'\r\nimport Footer from '../components/Footer';\r\nimport AffixMenu from '../components/AffixMenu';\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\nconst { Content } = Layout;\r\nconst { Text, Paragraph } = Typography;\r\n\r\nconst SquareAnimation = () => {\r\n    const squares = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n    return (<ul className=\"bg-bubbles\">\r\n        {squares.map((item, index) => {\r\n            return (<li key={index}></li>)\r\n        })}\r\n    </ul>\r\n    )\r\n}\r\nconst Blog = () => {\r\n    const [darkMode] = useState(false)\r\n    const onSelect = (selectedKeys, info) => {\r\n        console.log('selected', selectedKeys, info);\r\n    };\r\n    return (\r\n        <Layout style={{ background: '#23a6d5', overflow: 'hidden' }} className={`layout ${darkMode ? 'dark-mode' : ''}`}>\r\n            <SquareAnimation />\r\n            {/* Header */}\r\n            <AffixMenu />\r\n            <Divider style={{ backgroundColor: '#f0f2f5' }}><Text>Blog</Text></Divider>\r\n            <Content>\r\n                <Row justify=\"space-around\">\r\n                    <Col xs={24} sm={18}>\r\n                        <List\r\n                            style={{ backgroundColor: '#fff' }}\r\n                            bordered\r\n                            itemLayout=\"vertical\"\r\n                            size=\"large\"\r\n                            dataSource={data?.blog}\r\n                            renderItem={(item, index) => (\r\n                                <List.Item\r\n                                    key={index}\r\n                                    extra={item?.tree &&\r\n                                        <Tree\r\n                                            showLine\r\n                                            switcherIcon={<DownOutlined />}\r\n                                            defaultExpandedKeys={['0-0']}\r\n                                            onSelect={onSelect}\r\n                                            treeData={data?.blog[0].tree}\r\n                                        />\r\n                                    }\r\n                                >\r\n                                    <List.Item.Meta\r\n                                        title={item.title}\r\n                                    />\r\n                                    {item.content?.map((text, indexContent) => {\r\n                                        return (<Paragraph key={indexContent}>{text.paragraph}</Paragraph>)\r\n                                    })}\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Content>\r\n            <Divider style={{ backgroundColor: '#f0f2f5' }}></Divider>\r\n            {/* Footer */}\r\n            <Footer />\r\n        </Layout >\r\n    )\r\n}\r\n\r\nexport default Blog","import React from \"react\";\r\nimport { Switch, Redirect, Route } from \"react-router-dom\";\r\nimport Home from \"../views/Home\";\r\nimport Blog from \"../views/Blog\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route component={Home} exact path=\"/\" />\r\n            <Route component={Blog} exact path=\"/blog\" />\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Routes from './components/Routes';\n\nconst browserHistory = createBrowserHistory();\n\nfunction App() {\n  return (\n    <BrowserRouter history={browserHistory} basename=\"/personal-web/\">\n      <Routes />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './assets/custom.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}